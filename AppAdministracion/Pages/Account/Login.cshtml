@page

@using System.ComponentModel.DataAnnotations;

@{
    Layout = "~/Pages/Account/_Layout.cshtml";
}
@model LoginModel
    <div class="principal col-12 d-flex justify-content-center">
        <div class="secundario mt-5"> 
            <div class="titulo text-center"><h4>Iniciar Sesion </h4></div>
            <div class="m-1 text-danger" asp-validation-summary="All"></div>
            <div class="contenedor">
                <form class="form" method="post">
                    <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                    <div class="form-group">
                        <label class="label">UserName</label>
                        <input class="form-control form-control-lg" asp-for="UserName" />
                    </div>
                    <div class="form-group">
                        <label class="label">Password</label>
                        <input asp-for="Password" type="password" class="form-control form-control-lg" />
                    </div>
                    <button  type="submit">Log In</button>
                </form>
            </div>
        </div>
    </div>
    @functions {
        public class LoginModel : PageModel
        {
            private SignInManager<Usuario> signInManager;
            public LoginModel(SignInManager<Usuario> signinMgr)
            {
                signInManager = signinMgr;
            }
            [BindProperty]
            [Required]
            public string UserName { get; set; }

            [BindProperty]
            [Required]
            public string Password { get; set; }

            [BindProperty(SupportsGet = true)]
            public string ReturnUrl { get; set; }
            public async Task<IActionResult> OnPostAsync()
            {
                if (ModelState.IsValid)
                {
                    Microsoft.AspNetCore.Identity.SignInResult result =
                        await signInManager.PasswordSignInAsync(UserName, Password, false, false);
                    if (result.Succeeded)
                    {
                        return Redirect(ReturnUrl ?? "/");
                    }
                    ModelState.AddModelError("", "Invalid username or password");
                }
                return Page();
            }
        }
    }

